@model TODOList.Models.Task

@{
    ViewBag.Title = "Create new task";
}

<h2>Create new task</h2>

@using (Html.BeginForm("Create","Task", FormMethod.Post)) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Task</legend>

       @* <div class="editor-label">
            @Html.LabelFor(model => model.DateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateTime)
            @Html.ValidationMessageFor(model => model.DateTime)
        </div>*@
        @{//Model.DateTime = DateTime.Now.ToUniversalTime();
          }
        @{
            //Model.DateTime = DateTime.Now.ToUniversalTime();
            
            //Model.Completion = false;
            //Model.DateTime.
    //ViewBag.Title;
            
         }

        <div class="editor-label">
            @Html.LabelFor(model => model.Text)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Text)
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        
        @*<div class="editor-label">
            @Html.LabelFor(model => model.Terminator)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Terminator)
            @Html.ValidationMessageFor(model => model.Terminator)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.TextCategory)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TextCategory)
            @Html.ValidationMessageFor(model => model.TextCategory)
        </div>

        @*<div class="editor-label">
            @Html.LabelFor(model => model.CategoryId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CategoryId) 
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>*@

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
